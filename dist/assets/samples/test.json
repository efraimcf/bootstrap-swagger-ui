{
  "swagger" : "2.0",
  "info" : {
    "description" : "An unofficial OpenAPI definition for [httpbin.org](httpbin.org). Not all operations are listed here.\n",
    "version" : "1.0",
    "title" : "httpbin"
  },
  "host" : "httpbin.org",
  "tags" : [ {
    "name" : "auth",
    "description" : "Operations for testing Basic authentication"
  } ],
  "schemes" : [ "https", "http" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/get" : {
      "get" : {
        "summary" : "Gets something.",
        "description" : "Text of description",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "x-example" : "Foo bar"
        }, {
          "name" : "Date",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/uuid" : {
      "get" : {
        "summary" : "Returns UUID4",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200"
            }
          }
        }
      }
    },
    "/ip" : {
      "get" : {
        "summary" : "Returns Origin IP.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_1"
            }
          }
        }
      }
    },
    "/user-agent" : {
      "get" : {
        "summary" : "Returns the user agent.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_2"
            }
          }
        }
      }
    },
    "/headers" : {
      "get" : {
        "summary" : "Returns the request headers.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_3"
            }
          }
        }
      }
    },
    "/post" : {
      "post" : {
        "summary" : "POSTs a pizza order and returns the POSTed data.",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "custname",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "custtel",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "custemail",
          "in" : "formData",
          "required" : false,
          "type" : "string",
          "format" : "email"
        }, {
          "name" : "size",
          "in" : "formData",
          "required" : false,
          "type" : "string",
          "enum" : [ "small", "medium", "large" ]
        }, {
          "name" : "topping",
          "in" : "formData",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "bacon", "cheese", "mushroom", "onion" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "delivery",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "comments",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/delay/{n}" : {
      "get" : {
        "summary" : "Delays responding for min(n, 10) seconds.",
        "parameters" : [ {
          "name" : "n",
          "in" : "path",
          "description" : "Response delay, in seconds.",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/basic-auth/{user}/{password}" : {
      "get" : {
        "tags" : [ "auth" ],
        "summary" : "Challenges HTTPBasic Auth.",
        "description" : "Use `foo`/`bar` to authorize.",
        "parameters" : [ {
          "name" : "user",
          "in" : "path",
          "description" : "Username. Use the same username in the path AND for authorization.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "path",
          "description" : "Password. Use the same password in the path AND for authorization.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_4"
            }
          },
          "401" : {
            "description" : "Unauthorized (The username and password used for Basic auth do not match those in the URL path.)"
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/hidden-basic-auth/{user}/{password}" : {
      "get" : {
        "tags" : [ "auth" ],
        "summary" : "Hidden Basic authentication",
        "description" : "Returns 404 Not Found unless the request is authenticated.",
        "parameters" : [ {
          "name" : "user",
          "in" : "path",
          "description" : "Username. Use the same username in the path AND for authorization.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "path",
          "description" : "Password. Use the same password in the path AND for authorization.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_4"
            }
          },
          "404" : {
            "description" : "Unautorized (the username and password used for Basic auth do not match those in the URL path.)"
          }
        },
        "security" : [ {
          "basicAuth" : [ ]
        } ]
      }
    },
    "/status/{statusCode}" : {
      "get" : {
        "summary" : "Returns the specified HTTP status code.",
        "parameters" : [ {
          "name" : "statusCode",
          "in" : "path",
          "description" : "The status code to return.",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "default" : {
            "description" : "A response with the requested status code."
          }
        }
      }
    },
    "/xml" : {
      "get" : {
        "summary" : "Returns some XML.",
        "produces" : [ "application/xml" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/image/{format}" : {
      "get" : {
        "tags" : [ "images" ],
        "summary" : "Returns an image with the specified format.",
        "produces" : [ "image/png", "image/jpeg", "image/webp", "image/svg+xml" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "enum" : [ "png", "jpeg", "webp", "svg" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "file"
            }
          }
        }
      }
    },
    "/image" : {
      "get" : {
        "tags" : [ "images" ],
        "summary" : "Returns an image based on the Accept header.",
        "produces" : [ "image/png", "image/jpeg", "image/webp", "image/svg+xml", "image/*" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "file"
            }
          },
          "406" : {
            "description" : "Client did not request a supported media type."
          }
        }
      }
    },
    "/cache" : {
      "get" : {
        "summary" : "Returns 200 unless an If-Modified-Since or If-None-Match header is provided, when it returns a 304.",
        "parameters" : [ {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "For testing purposes this header accepts any value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "For testing purposes this header accepts any value.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Neigher If-Modified-Since nor If-None-Match header is provided"
          },
          "304" : {
            "description" : "If-Modified-Since or If-None-Match header is provided"
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "inline_response_200_1" : {
      "required" : [ "origin" ],
      "properties" : {
        "origin" : {
          "type" : "string",
          "example" : "10.100.10.10",
          "description" : "The IP address, or a comma-separated list. E.g. \"10.100.10.10, 10.100.20.254, 52.91.14.13\""
        }
      },
      "example" : {
        "origin" : "10.100.10.10"
      }
    },
    "inline_response_200" : {
      "required" : [ "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "example" : {
        "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      }
    },
    "inline_response_200_2" : {
      "properties" : {
        "user-agent" : {
          "type" : "string"
        }
      },
      "example" : {
        "user-agent" : "user-agent"
      }
    },
    "inline_response_200_3" : {
      "required" : [ "headers" ],
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "example" : {
        "headers" : {
          "key" : "headers"
        }
      }
    },
    "inline_response_200_4" : {
      "properties" : {
        "authenticated" : {
          "type" : "boolean",
          "example" : true
        },
        "user" : {
          "type" : "string",
          "description" : "The user name specified in the request."
        }
      },
      "example" : {
        "authenticated" : true,
        "user" : "user"
      }
    }
  },
  "parameters" : {
    "user" : {
      "name" : "user",
      "in" : "path",
      "description" : "Username. Use the same username in the path AND for authorization.",
      "required" : true,
      "type" : "string"
    },
    "password" : {
      "name" : "password",
      "in" : "path",
      "description" : "Password. Use the same password in the path AND for authorization.",
      "required" : true,
      "type" : "string"
    }
  },
  "responses" : {
    "200BasicAuth" : {
      "description" : "OK",
      "schema" : {
        "type" : "object",
        "properties" : {
          "authenticated" : {
            "type" : "boolean",
            "example" : true
          },
          "user" : {
            "type" : "string",
            "description" : "The user name specified in the request."
          }
        }
      }
    },
    "200File" : {
      "description" : "OK",
      "schema" : {
        "type" : "file"
      }
    }
  }
}